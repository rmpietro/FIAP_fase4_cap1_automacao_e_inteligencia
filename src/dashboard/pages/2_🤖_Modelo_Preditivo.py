import streamlit as st
import pandas as pd
import plotly.express as px
import sys
from pathlib import Path

# Adicionar diret√≥rio pai ao PYTHONPATH
parent_dir = str(Path(__file__).parent.parent.parent)
if parent_dir not in sys.path:
    sys.path.append(parent_dir)

from dados.data_analysis import SensorDataAnalyzer

st.title("ü§ñ Modelo Preditivo")

# Treinar modelo
analyzer = SensorDataAnalyzer(str(Path(__file__).parent.parent.parent / 'dados' / 'dados_app.json'))
results = analyzer.train_model()

# M√©tricas do modelo
col1, col2 = st.columns(2)

with col1:
    st.metric("Acur√°cia do Modelo", f"{results['accuracy']:.2%}")

# Feature Importance
st.header("Import√¢ncia das Features")
fig_importance = px.bar(results['feature_importance'],
                        x='feature', y='importance',
                        title="Import√¢ncia das Features")
st.plotly_chart(fig_importance)

# Previs√µes para as pr√≥ximas 24 horas
st.header("Previs√µes para as Pr√≥ximas 24 Horas")
predictions = analyzer.predict_next_24h()

# Converter previs√µes para DataFrame
pred_df = pd.DataFrame(predictions)
pred_df['timestamp'] = pd.to_datetime(pred_df['timestamp'])

# Gr√°fico de probabilidade das previs√µes
fig_pred = px.line(pred_df, x='timestamp', y='probabilidade',
                   title="Probabilidade das Previs√µes",
                   labels={'probabilidade': 'Probabilidade',
                           'timestamp': 'Hor√°rio'})
st.plotly_chart(fig_pred)

# Tabela com as previs√µes
st.dataframe(pred_df)
